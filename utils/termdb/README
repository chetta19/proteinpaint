Files under this folder:

- buildTermdb.js: a general purpose pipeline to build SQLite database,
  using input files for dictionary and sample anntation contents.
- *.sql: various SQL scripts that fully define the database table structure and indexing
- reheader.py: used for datasets with BCF/tabix files

To run the pipeline, first generate webpack bundle:

$ ../../node_modules/.bin/webpack --config=webpack.config.js

This yields script "buildTermdb.bundle.js".
You can run this script from anywhere on your computer.



Usage 1: Build db with dictionary and sample annotation.

$ node path/to/buildTermdb.bundle.js terms=path/to/terms.txt annotation3Col=path/to/annotations.txt survival=path/to/survival.txt

This generates a database file named "db.runId", and integer-to-string sample name mapping "sampleidmap.runId"

If the dataset has BCF or tabix files that contains string sample names, must reheader these files using "sampleidmap", to generate new BCF/tabix files using integer sample IDs.

$ python3 reheader.py --bcf path/to/bcf_file --fusion path/to/fusion_file --sample path/to/sampleIdMatchFile --out_bcf reheadered_bcf --out_fusion reheadered_fusion


Usage 2: Build dictionary-only db.

$ node path/to/buildTermdb.bundle.js phenotree=path/to/phenotree.txt

This generates only a db file.



To share the pipeline with people outside the team, do below:
$ scp buildTermdb.bundle.js *.sql hpc:~/tp/termdb/

This deposites latest bundle and sql scripts at the "tp/" folder on HPC.
An HPC user can then softlink ~/tp/termdb/buildTermdb.bundle.js to their own subfolder in "tp/" to run it.
User doesn't need to softlink those sql scripts.
